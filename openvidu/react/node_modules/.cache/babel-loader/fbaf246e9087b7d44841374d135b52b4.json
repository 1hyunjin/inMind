{"ast":null,"code":"import{OpenVidu}from'openvidu-browser';import axios from'axios';import React,{Component}from'react';import'./App.css';import UserVideoComponent from'./UserVideoComponent';// const APPLICATION_SERVER_URL = process.env.NODE_ENV === 'production' ? '' : 'https://demos.openvidu.io/';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const APPLICATION_SERVER_URL=process.env.NODE_ENV==='production'?'':'https://b301.xyz/';class App extends Component{constructor(props){super(props);// These properties are in the state's component in order to re-render the HTML whenever their values change\nthis.state={mySessionId:'SessionA',myUserName:'Participant'+Math.floor(Math.random()*100),session:undefined,mainStreamManager:undefined,// Main video of the page. Will be the 'publisher' or one of the 'subscribers'\npublisher:undefined,subscribers:[]};this.joinSession=this.joinSession.bind(this);this.leaveSession=this.leaveSession.bind(this);this.switchCamera=this.switchCamera.bind(this);this.handleChangeSessionId=this.handleChangeSessionId.bind(this);this.handleChangeUserName=this.handleChangeUserName.bind(this);this.handleMainVideoStream=this.handleMainVideoStream.bind(this);this.onbeforeunload=this.onbeforeunload.bind(this);}componentDidMount(){window.addEventListener('beforeunload',this.onbeforeunload);}componentWillUnmount(){window.removeEventListener('beforeunload',this.onbeforeunload);}onbeforeunload(event){this.leaveSession();}handleChangeSessionId(e){this.setState({mySessionId:e.target.value});}handleChangeUserName(e){this.setState({myUserName:e.target.value});}handleMainVideoStream(stream){if(this.state.mainStreamManager!==stream){this.setState({mainStreamManager:stream});}}deleteSubscriber(streamManager){let subscribers=this.state.subscribers;let index=subscribers.indexOf(streamManager,0);if(index>-1){subscribers.splice(index,1);this.setState({subscribers:subscribers});}}joinSession(){// --- 1) Get an OpenVidu object ---\nthis.OV=new OpenVidu();// --- 2) Init a session ---\nthis.setState({session:this.OV.initSession()},()=>{var mySession=this.state.session;// --- 3) Specify the actions when events take place in the session ---\n// On every new Stream received...\nmySession.on('streamCreated',event=>{// Subscribe to the Stream to receive it. Second parameter is undefined\n// so OpenVidu doesn't create an HTML video by its own\nvar subscriber=mySession.subscribe(event.stream,undefined);var subscribers=this.state.subscribers;subscribers.push(subscriber);// Update the state with the new subscribers\nthis.setState({subscribers:subscribers});});// On every Stream destroyed...\nmySession.on('streamDestroyed',event=>{// Remove the stream from 'subscribers' array\nthis.deleteSubscriber(event.stream.streamManager);});// On every asynchronous exception...\nmySession.on('exception',exception=>{console.warn(exception);});// --- 4) Connect to the session with a valid user token ---\n// Get a token from the OpenVidu deployment\nthis.getToken().then(token=>{// First param is the token got from the OpenVidu deployment. Second param can be retrieved by every user on event\n// 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\nmySession.connect(token,{clientData:this.state.myUserName}).then(async()=>{// --- 5) Get your own camera stream ---\n// Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\n// element: we will manage it on our own) and with the desired properties\nlet publisher=await this.OV.initPublisherAsync(undefined,{audioSource:undefined,// The source of audio. If undefined default microphone\nvideoSource:undefined,// The source of video. If undefined default webcam\npublishAudio:true,// Whether you want to start publishing with your audio unmuted or not\npublishVideo:true,// Whether you want to start publishing with your video enabled or not\nresolution:'640x480',// The resolution of your video\nframeRate:30,// The frame rate of your video\ninsertMode:'APPEND',// How the video is inserted in the target element 'video-container'\nmirror:false// Whether to mirror your local video or not\n});// --- 6) Publish your stream ---\nmySession.publish(publisher);// Obtain the current video device in use\nvar devices=await this.OV.getDevices();var videoDevices=devices.filter(device=>device.kind==='videoinput');var currentVideoDeviceId=publisher.stream.getMediaStream().getVideoTracks()[0].getSettings().deviceId;var currentVideoDevice=videoDevices.find(device=>device.deviceId===currentVideoDeviceId);// Set the main video in the page to display our webcam and store our Publisher\nthis.setState({currentVideoDevice:currentVideoDevice,mainStreamManager:publisher,publisher:publisher});}).catch(error=>{console.log('There was an error connecting to the session:',error.code,error.message);});});});}leaveSession(){// --- 7) Leave the session by calling 'disconnect' method over the Session object ---\nconst mySession=this.state.session;if(mySession){mySession.disconnect();}// Empty all properties...\nthis.OV=null;this.setState({session:undefined,subscribers:[],mySessionId:'SessionA',myUserName:'Participant'+Math.floor(Math.random()*100),mainStreamManager:undefined,publisher:undefined});}async switchCamera(){try{const devices=await this.OV.getDevices();var videoDevices=devices.filter(device=>device.kind==='videoinput');if(videoDevices&&videoDevices.length>1){var newVideoDevice=videoDevices.filter(device=>device.deviceId!==this.state.currentVideoDevice.deviceId);if(newVideoDevice.length>0){// Creating a new publisher with specific videoSource\n// In mobile devices the default and first camera is the front one\nvar newPublisher=this.OV.initPublisher(undefined,{videoSource:newVideoDevice[0].deviceId,publishAudio:true,publishVideo:true,mirror:true});//newPublisher.once(\"accessAllowed\", () => {\nawait this.state.session.unpublish(this.state.mainStreamManager);await this.state.session.publish(newPublisher);this.setState({currentVideoDevice:newVideoDevice[0],mainStreamManager:newPublisher,publisher:newPublisher});}}}catch(e){console.error(e);}}render(){const mySessionId=this.state.mySessionId;const myUserName=this.state.myUserName;return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[this.state.session===undefined?/*#__PURE__*/_jsxs(\"div\",{id:\"join\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"img-div\",children:/*#__PURE__*/_jsx(\"img\",{src:\"resources/images/openvidu_grey_bg_transp_cropped.png\",alt:\"OpenVidu logo\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"join-dialog\",className:\"jumbotron vertical-center\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Join a video session \"}),/*#__PURE__*/_jsxs(\"form\",{className:\"form-group\",onSubmit:this.joinSession,children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Participant: \"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",id:\"userName\",value:myUserName,onChange:this.handleChangeUserName,required:true})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\" Session: \"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",id:\"sessionId\",value:mySessionId,onChange:this.handleChangeSessionId,required:true})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-lg btn-success\",name:\"commit\",type:\"submit\",value:\"JOIN\"})})]})]})]}):null,this.state.session!==undefined?/*#__PURE__*/_jsxs(\"div\",{id:\"session\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"session-header\",children:[/*#__PURE__*/_jsx(\"h1\",{id:\"session-title\",children:mySessionId}),/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-large btn-danger\",type:\"button\",id:\"buttonLeaveSession\",onClick:this.leaveSession,value:\"Leave session\"}),/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-large btn-success\",type:\"button\",id:\"buttonSwitchCamera\",onClick:this.switchCamera,value:\"Switch Camera\"})]}),this.state.mainStreamManager!==undefined?/*#__PURE__*/_jsx(\"div\",{id:\"main-video\",className:\"col-md-6\",children:/*#__PURE__*/_jsx(UserVideoComponent,{streamManager:this.state.mainStreamManager})}):null,/*#__PURE__*/_jsxs(\"div\",{id:\"video-container\",className:\"col-md-6\",children:[this.state.publisher!==undefined?/*#__PURE__*/_jsx(\"div\",{className:\"stream-container col-md-6 col-xs-6\",onClick:()=>this.handleMainVideoStream(this.state.publisher),children:/*#__PURE__*/_jsx(UserVideoComponent,{streamManager:this.state.publisher})}):null,this.state.subscribers.map((sub,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"stream-container col-md-6 col-xs-6\",onClick:()=>this.handleMainVideoStream(sub),children:[/*#__PURE__*/_jsx(\"span\",{children:sub.id}),/*#__PURE__*/_jsx(UserVideoComponent,{streamManager:sub})]},sub.id))]})]}):null]});}/**\n     * --------------------------------------------\n     * GETTING A TOKEN FROM YOUR APPLICATION SERVER\n     * --------------------------------------------\n     * The methods below request the creation of a Session and a Token to\n     * your application server. This keeps your OpenVidu deployment secure.\n     *\n     * In this sample code, there is no user control at all. Anybody could\n     * access your application server endpoints! In a real production\n     * environment, your application server must identify the user to allow\n     * access to the endpoints.\n     *\n     * Visit https://docs.openvidu.io/en/stable/application-server to learn\n     * more about the integration of OpenVidu in your application server.\n     */async getToken(){const sessionId=await this.createSession(this.state.mySessionId);return await this.createToken(sessionId);}async createSession(sessionId){const response=await axios.post(APPLICATION_SERVER_URL+'openvidu/api/sessions',{customSessionId:sessionId},{headers:{'Content-Type':'application/json','Authorization':'Basic T1BFTlZJRFVBUFA6c3NhZnk='}});console.log(sessionId);console.log(response.data);return response.data;// The sessionId\n}async createToken(sessionId){console.log(sessionId);const response=await axios.post(APPLICATION_SERVER_URL+'openvidu/api/sessions/'+sessionId.sessionId+'/connection',{},{headers:{'Content-Type':'application/json','Authorization':'Basic T1BFTlZJRFVBUFA6c3NhZnk='}});console.log(response.data);return response.data.token;// The token\n}}export default App;","map":{"version":3,"names":["OpenVidu","axios","React","Component","UserVideoComponent","jsx","_jsx","jsxs","_jsxs","APPLICATION_SERVER_URL","process","env","NODE_ENV","App","constructor","props","state","mySessionId","myUserName","Math","floor","random","session","undefined","mainStreamManager","publisher","subscribers","joinSession","bind","leaveSession","switchCamera","handleChangeSessionId","handleChangeUserName","handleMainVideoStream","onbeforeunload","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","event","e","setState","target","value","stream","deleteSubscriber","streamManager","index","indexOf","splice","OV","initSession","mySession","on","subscriber","subscribe","push","exception","console","warn","getToken","then","token","connect","clientData","initPublisherAsync","audioSource","videoSource","publishAudio","publishVideo","resolution","frameRate","insertMode","mirror","publish","devices","getDevices","videoDevices","filter","device","kind","currentVideoDeviceId","getMediaStream","getVideoTracks","getSettings","deviceId","currentVideoDevice","find","catch","error","log","code","message","disconnect","length","newVideoDevice","newPublisher","initPublisher","unpublish","render","className","children","id","src","alt","onSubmit","type","onChange","required","name","onClick","map","sub","i","sessionId","createSession","createToken","response","post","customSessionId","headers","data"],"sources":["/opt/openvidu/openvidu-tutorials/openvidu-react/src/App.js"],"sourcesContent":["import { OpenVidu } from 'openvidu-browser';\n\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport './App.css';\nimport UserVideoComponent from './UserVideoComponent';\n\n// const APPLICATION_SERVER_URL = process.env.NODE_ENV === 'production' ? '' : 'https://demos.openvidu.io/';\nconst APPLICATION_SERVER_URL = process.env.NODE_ENV === 'production' ? '' : 'https://b301.xyz/';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        // These properties are in the state's component in order to re-render the HTML whenever their values change\n        this.state = {\n            mySessionId: 'SessionA',\n            myUserName: 'Participant' + Math.floor(Math.random() * 100),\n            session: undefined,\n            mainStreamManager: undefined,  // Main video of the page. Will be the 'publisher' or one of the 'subscribers'\n            publisher: undefined,\n            subscribers: [],\n        };\n\n        this.joinSession = this.joinSession.bind(this);\n        this.leaveSession = this.leaveSession.bind(this);\n        this.switchCamera = this.switchCamera.bind(this);\n        this.handleChangeSessionId = this.handleChangeSessionId.bind(this);\n        this.handleChangeUserName = this.handleChangeUserName.bind(this);\n        this.handleMainVideoStream = this.handleMainVideoStream.bind(this);\n        this.onbeforeunload = this.onbeforeunload.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.onbeforeunload);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.onbeforeunload);\n    }\n\n    onbeforeunload(event) {\n        this.leaveSession();\n    }\n\n    handleChangeSessionId(e) {\n        this.setState({\n            mySessionId: e.target.value,\n        });\n    }\n\n    handleChangeUserName(e) {\n        this.setState({\n            myUserName: e.target.value,\n        });\n    }\n\n    handleMainVideoStream(stream) {\n        if (this.state.mainStreamManager !== stream) {\n            this.setState({\n                mainStreamManager: stream\n            });\n        }\n    }\n\n    deleteSubscriber(streamManager) {\n        let subscribers = this.state.subscribers;\n        let index = subscribers.indexOf(streamManager, 0);\n        if (index > -1) {\n            subscribers.splice(index, 1);\n            this.setState({\n                subscribers: subscribers,\n            });\n        }\n    }\n\n    joinSession() {\n        // --- 1) Get an OpenVidu object ---\n\n        this.OV = new OpenVidu();\n\n        // --- 2) Init a session ---\n\n        this.setState(\n            {\n                session: this.OV.initSession(),\n            },\n            () => {\n                var mySession = this.state.session;\n\n                // --- 3) Specify the actions when events take place in the session ---\n\n                // On every new Stream received...\n                mySession.on('streamCreated', (event) => {\n                    // Subscribe to the Stream to receive it. Second parameter is undefined\n                    // so OpenVidu doesn't create an HTML video by its own\n                    var subscriber = mySession.subscribe(event.stream, undefined);\n                    var subscribers = this.state.subscribers;\n                    subscribers.push(subscriber);\n\n                    // Update the state with the new subscribers\n                    this.setState({\n                        subscribers: subscribers,\n                    });\n                });\n\n                // On every Stream destroyed...\n                mySession.on('streamDestroyed', (event) => {\n\n                    // Remove the stream from 'subscribers' array\n                    this.deleteSubscriber(event.stream.streamManager);\n                });\n\n                // On every asynchronous exception...\n                mySession.on('exception', (exception) => {\n                    console.warn(exception);\n                });\n\n                // --- 4) Connect to the session with a valid user token ---\n\n                // Get a token from the OpenVidu deployment\n                this.getToken().then((token) => {\n                    // First param is the token got from the OpenVidu deployment. Second param can be retrieved by every user on event\n                    // 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\n                    mySession.connect(token, { clientData: this.state.myUserName })\n                        .then(async () => {\n\n                            // --- 5) Get your own camera stream ---\n\n                            // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\n                            // element: we will manage it on our own) and with the desired properties\n                            let publisher = await this.OV.initPublisherAsync(undefined, {\n                                audioSource: undefined, // The source of audio. If undefined default microphone\n                                videoSource: undefined, // The source of video. If undefined default webcam\n                                publishAudio: true, // Whether you want to start publishing with your audio unmuted or not\n                                publishVideo: true, // Whether you want to start publishing with your video enabled or not\n                                resolution: '640x480', // The resolution of your video\n                                frameRate: 30, // The frame rate of your video\n                                insertMode: 'APPEND', // How the video is inserted in the target element 'video-container'\n                                mirror: false, // Whether to mirror your local video or not\n                            });\n\n                            // --- 6) Publish your stream ---\n\n                            mySession.publish(publisher);\n\n                            // Obtain the current video device in use\n                            var devices = await this.OV.getDevices();\n                            var videoDevices = devices.filter(device => device.kind === 'videoinput');\n                            var currentVideoDeviceId = publisher.stream.getMediaStream().getVideoTracks()[0].getSettings().deviceId;\n                            var currentVideoDevice = videoDevices.find(device => device.deviceId === currentVideoDeviceId);\n\n                            // Set the main video in the page to display our webcam and store our Publisher\n                            this.setState({\n                                currentVideoDevice: currentVideoDevice,\n                                mainStreamManager: publisher,\n                                publisher: publisher,\n                            });\n                        })\n                        .catch((error) => {\n                            console.log('There was an error connecting to the session:', error.code, error.message);\n                        });\n                });\n            },\n        );\n    }\n\n    leaveSession() {\n\n        // --- 7) Leave the session by calling 'disconnect' method over the Session object ---\n\n        const mySession = this.state.session;\n\n        if (mySession) {\n            mySession.disconnect();\n        }\n\n        // Empty all properties...\n        this.OV = null;\n        this.setState({\n            session: undefined,\n            subscribers: [],\n            mySessionId: 'SessionA',\n            myUserName: 'Participant' + Math.floor(Math.random() * 100),\n            mainStreamManager: undefined,\n            publisher: undefined\n        });\n    }\n\n    async switchCamera() {\n        try {\n            const devices = await this.OV.getDevices()\n            var videoDevices = devices.filter(device => device.kind === 'videoinput');\n\n            if (videoDevices && videoDevices.length > 1) {\n\n                var newVideoDevice = videoDevices.filter(device => device.deviceId !== this.state.currentVideoDevice.deviceId)\n\n                if (newVideoDevice.length > 0) {\n                    // Creating a new publisher with specific videoSource\n                    // In mobile devices the default and first camera is the front one\n                    var newPublisher = this.OV.initPublisher(undefined, {\n                        videoSource: newVideoDevice[0].deviceId,\n                        publishAudio: true,\n                        publishVideo: true,\n                        mirror: true\n                    });\n\n                    //newPublisher.once(\"accessAllowed\", () => {\n                    await this.state.session.unpublish(this.state.mainStreamManager)\n\n                    await this.state.session.publish(newPublisher)\n                    this.setState({\n                        currentVideoDevice: newVideoDevice[0],\n                        mainStreamManager: newPublisher,\n                        publisher: newPublisher,\n                    });\n                }\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    render() {\n        const mySessionId = this.state.mySessionId;\n        const myUserName = this.state.myUserName;\n\n        return (\n            <div className=\"container\">\n                {this.state.session === undefined ? (\n                    <div id=\"join\">\n                        <div id=\"img-div\">\n                            <img src=\"resources/images/openvidu_grey_bg_transp_cropped.png\" alt=\"OpenVidu logo\" />\n                        </div>\n                        <div id=\"join-dialog\" className=\"jumbotron vertical-center\">\n                            <h1> Join a video session </h1>\n                            <form className=\"form-group\" onSubmit={this.joinSession}>\n                                <p>\n                                    <label>Participant: </label>\n                                    <input\n                                        className=\"form-control\"\n                                        type=\"text\"\n                                        id=\"userName\"\n                                        value={myUserName}\n                                        onChange={this.handleChangeUserName}\n                                        required\n                                    />\n                                </p>\n                                <p>\n                                    <label> Session: </label>\n                                    <input\n                                        className=\"form-control\"\n                                        type=\"text\"\n                                        id=\"sessionId\"\n                                        value={mySessionId}\n                                        onChange={this.handleChangeSessionId}\n                                        required\n                                    />\n                                </p>\n                                <p className=\"text-center\">\n                                    <input className=\"btn btn-lg btn-success\" name=\"commit\" type=\"submit\" value=\"JOIN\" />\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                ) : null}\n\n                {this.state.session !== undefined ? (\n                    <div id=\"session\">\n                        <div id=\"session-header\">\n                            <h1 id=\"session-title\">{mySessionId}</h1>\n                            <input\n                                className=\"btn btn-large btn-danger\"\n                                type=\"button\"\n                                id=\"buttonLeaveSession\"\n                                onClick={this.leaveSession}\n                                value=\"Leave session\"\n                            />\n                            <input\n                                className=\"btn btn-large btn-success\"\n                                type=\"button\"\n                                id=\"buttonSwitchCamera\"\n                                onClick={this.switchCamera}\n                                value=\"Switch Camera\"\n                            />\n                        </div>\n\n                        {this.state.mainStreamManager !== undefined ? (\n                            <div id=\"main-video\" className=\"col-md-6\">\n                                <UserVideoComponent streamManager={this.state.mainStreamManager} />\n\n                            </div>\n                        ) : null}\n                        <div id=\"video-container\" className=\"col-md-6\">\n                            {this.state.publisher !== undefined ? (\n                                <div className=\"stream-container col-md-6 col-xs-6\" onClick={() => this.handleMainVideoStream(this.state.publisher)}>\n                                    <UserVideoComponent\n                                        streamManager={this.state.publisher} />\n                                </div>\n                            ) : null}\n                            {this.state.subscribers.map((sub, i) => (\n                                <div key={sub.id} className=\"stream-container col-md-6 col-xs-6\" onClick={() => this.handleMainVideoStream(sub)}>\n                                    <span>{sub.id}</span>\n                                    <UserVideoComponent streamManager={sub} />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n\n\n    /**\n     * --------------------------------------------\n     * GETTING A TOKEN FROM YOUR APPLICATION SERVER\n     * --------------------------------------------\n     * The methods below request the creation of a Session and a Token to\n     * your application server. This keeps your OpenVidu deployment secure.\n     *\n     * In this sample code, there is no user control at all. Anybody could\n     * access your application server endpoints! In a real production\n     * environment, your application server must identify the user to allow\n     * access to the endpoints.\n     *\n     * Visit https://docs.openvidu.io/en/stable/application-server to learn\n     * more about the integration of OpenVidu in your application server.\n     */\n    async getToken() {\n        const sessionId = await this.createSession(this.state.mySessionId);\n        return await this.createToken(sessionId);\n    }\n\n    async createSession(sessionId) {\n        const response = await axios.post(APPLICATION_SERVER_URL + 'openvidu/api/sessions', { customSessionId: sessionId }, {\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Basic T1BFTlZJRFVBUFA6c3NhZnk=',},\n        });\n\tconsole.log(sessionId);\n\tconsole.log(response.data);\n        return response.data; // The sessionId\n    }\n\n    async createToken(sessionId) {\n\tconsole.log(sessionId);\n        const response = await axios.post(APPLICATION_SERVER_URL + 'openvidu/api/sessions/' + sessionId.sessionId + '/connection', {}, {\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Basic T1BFTlZJRFVBUFA6c3NhZnk=', },\n        });\n\tconsole.log(response.data);\n        return response.data.token; // The token\n    }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}